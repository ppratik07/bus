// This is your Prisma schema file.
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  email        String?       @unique
  phoneNumber  String?       @unique
  name         String?
  otp          String?
  otpExpiresAt DateTime?
  role         UserRole      @default(USER)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  tokens       Token[]
  reservations Reservation[]
}

model Seat {
  id           Int           @id @default(autoincrement())
  label        String
  x            Int
  y            Int
  row          Int?          // Optional: Represents the row in the grid
  column       Int?          // Optional: Represents the column in the grid
  eventId   Int 
  status       SeatStatus    @default(available)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  reservations Reservation[]
}

model Reservation {
  id           Int           @id @default(autoincrement())
  date         DateTime
  status       ReservationStatus @default(PENDING)
  userId       Int
  seatId       Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  seat         Seat          @relation(fields: [seatId], references: [id], onDelete: Cascade)

  @@unique([date, seatId]) // Ensures no double booking of the same seat at the same time
}

model Token {
  id           Int           @id @default(autoincrement())
  token        String
  userId       Int
  createdAt    DateTime      @default(now())
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum SeatStatus {
  available
  reserved
  unavailable
}

enum UserRole {
  USER
  ADMIN
}

enum ReservationStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
