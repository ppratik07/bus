// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  username     String        @unique
  password     String
  name         String?
  otp          String?
  otpExpiresAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tokens    Token[]
  reservations  Reservation[]
}

model Seat {
  id          Int           @id @default(autoincrement())
  label       String
  x           Int
  y           Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  status      SeatStatus    
  reservations Reservation[]
}

model Reservation {
  id     Int      @id @default(autoincrement())
  date   DateTime
  userId Int
  seatId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  seat Seat @relation(fields: [seatId], references: [id])
}
model Token {
  id        Int      @id @default(autoincrement())
  token     String
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
enum SeatStatus {
  available
  reserved
  unavailable
}